{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "sources": "contracts",
    "tests": "test",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\ds-test\\demo\\demo.sol": {
      "lastModificationDate": 1649846128827,
      "contentHash": "23a687c34e27f0dd5f1ef90b41077759",
      "sourceName": "contracts\\lib\\ds-test\\demo\\demo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\ds-test\\src\\test.sol"
      ],
      "versionRequirement": ">=0.4.23",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\ds-test\\src\\test.sol": {
      "lastModificationDate": 1649847678385,
      "contentHash": "2c9806925f5d78ba4f4fb0570611cca3",
      "sourceName": "contracts\\lib\\ds-test\\src\\test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\certora\\harnesses\\ERC20VotesHarness.sol": {
      "lastModificationDate": 1649846130476,
      "contentHash": "2298142563464a1941df1a904324d11a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\certora\\harnesses\\ERC20VotesHarness.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\certora\\harnesses\\WizardControlFirstPriority.sol": {
      "lastModificationDate": 1649846130477,
      "contentHash": "74baa1e0288fb471da4740d60f37d73a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\certora\\harnesses\\WizardControlFirstPriority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\certora\\harnesses\\WizardFirstTry.sol": {
      "lastModificationDate": 1649846130478,
      "contentHash": "8d131115e1780a22196124a84cc43d96",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\certora\\harnesses\\WizardFirstTry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol": {
      "lastModificationDate": 1649847680399,
      "contentHash": "47a4cfca7ad2140a893467d26625110b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlCrossChain.sol": {
      "lastModificationDate": 1649847680401,
      "contentHash": "8866075543b1189d4c3591bea1404e5a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlCrossChain.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlEnumerable.sol": {
      "lastModificationDate": 1649847680403,
      "contentHash": "cb3bbb61271ec9892cc943061e6abb68",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol": {
      "lastModificationDate": 1649846130490,
      "contentHash": "b2c039b7ec738e0241865b8e3cc42297",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol": {
      "lastModificationDate": 1649846130491,
      "contentHash": "700f10f7283f23e25500457f80f62415",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol": {
      "lastModificationDate": 1649846130491,
      "contentHash": "5add26f9f2cf9837a6eba8b29f83e543",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol": {
      "lastModificationDate": 1649847680410,
      "contentHash": "bc8527ee9af306e86932df13458da936",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\CrossChainEnabledAMB.sol": {
      "lastModificationDate": 1649847680415,
      "contentHash": "eeb7916030312ac91d5d6aaa015f7db5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\CrossChainEnabledAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\LibAMB.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\amb\\IAMB.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\LibAMB.sol": {
      "lastModificationDate": 1649847680419,
      "contentHash": "d9c9ca827e0b581500f6c5e42f5fe75a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\LibAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\amb\\IAMB.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL1.sol": {
      "lastModificationDate": 1649847680424,
      "contentHash": "9b5e6c9e6b882a36bef3b464db88e655",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL1.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IBridge.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IInbox.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IMessageProvider.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IOutbox.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL2.sol": {
      "lastModificationDate": 1649847680426,
      "contentHash": "0cb224f3d0cbc224cc1047c23d667b90",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL2.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL1.sol": {
      "lastModificationDate": 1649847680430,
      "contentHash": "9f0e09d578a4bd634beef7ad788398e9",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IBridge.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IInbox.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IMessageProvider.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IOutbox.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL2.sol": {
      "lastModificationDate": 1649847680432,
      "contentHash": "1dc171c0579bb64d26d4c2a9f5d2125d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol": {
      "lastModificationDate": 1649847680434,
      "contentHash": "2b5be3903bbd2bff5f328e1e058742c5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\CrossChainEnabledOptimism.sol": {
      "lastModificationDate": 1649847680437,
      "contentHash": "ec8e440db2aa65ebc8e4ba0f02623660",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\CrossChainEnabledOptimism.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\LibOptimism.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\optimism\\ICrossDomainMessenger.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\LibOptimism.sol": {
      "lastModificationDate": 1649847680439,
      "contentHash": "bda11964159d0b37120dacd4453a6950",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\LibOptimism.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\optimism\\ICrossDomainMessenger.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\polygon\\CrossChainEnabledPolygonChild.sol": {
      "lastModificationDate": 1649847680443,
      "contentHash": "c50c4be5a80bac931f3bea86bbef9ed4",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\polygon\\CrossChainEnabledPolygonChild.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\ReentrancyGuard.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\polygon\\IFxMessageProcessor.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\finance\\PaymentSplitter.sol": {
      "lastModificationDate": 1649846130493,
      "contentHash": "4d08d5e1fcb2c4d65c8b530d126516e2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\finance\\PaymentSplitter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\finance\\VestingWallet.sol": {
      "lastModificationDate": 1649847680447,
      "contentHash": "c5c82fe6b4ebd5a24a1e0271f21ee0d5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\finance\\VestingWallet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol": {
      "lastModificationDate": 1649847680451,
      "contentHash": "bb0ec8da0a3b493863c2f3e16b1d4bfb",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol": {
      "lastModificationDate": 1649847680453,
      "contentHash": "3f6b59484a4afb29295fa51da88d2732",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol": {
      "lastModificationDate": 1649847680459,
      "contentHash": "cac0a257ccb52865b46d590dc132d24d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\GovernorCompatibilityBravo.sol": {
      "lastModificationDate": 1649847680461,
      "contentHash": "94b6f00cba78d6f91f0e05ce93e0f921",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\GovernorCompatibilityBravo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\IGovernorCompatibilityBravo.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\IGovernorCompatibilityBravo.sol": {
      "lastModificationDate": 1649846130499,
      "contentHash": "29cab7f5c9f80b678119c0532c2b2627",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\IGovernorCompatibilityBravo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol": {
      "lastModificationDate": 1649847680466,
      "contentHash": "66e3887124f2ea64923e22144d9e924c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorPreventLateQuorum.sol": {
      "lastModificationDate": 1649847680468,
      "contentHash": "ef0bc8879bca45935c05462f75957a1b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorPreventLateQuorum.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorProposalThreshold.sol": {
      "lastModificationDate": 1649846130502,
      "contentHash": "c9881121864aef692d768b85eeb12fb7",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorProposalThreshold.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol": {
      "lastModificationDate": 1649846130503,
      "contentHash": "2742cda9b3a635c3e874cbadb684f7d0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockCompound.sol": {
      "lastModificationDate": 1649847680470,
      "contentHash": "b67ead275957c2df3a96c696a26eb58c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockCompound.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\compound\\ICompoundTimelock.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol": {
      "lastModificationDate": 1649847680473,
      "contentHash": "a66c6fb0219943445ec7bce1c3c5fd51",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol": {
      "lastModificationDate": 1649847680474,
      "contentHash": "e4674e96fbb0ca2a41be471411fb03ff",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesComp.sol": {
      "lastModificationDate": 1649847680476,
      "contentHash": "5837215dde3b3c93b8373e88ccf46f74",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesComp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20VotesComp.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol": {
      "lastModificationDate": 1649847680477,
      "contentHash": "8175f6c384e1231df3d82e66b268c2a0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol": {
      "lastModificationDate": 1649846130506,
      "contentHash": "d6915294522ca63fd25454f07cdffa5c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol": {
      "lastModificationDate": 1649847680480,
      "contentHash": "632454fb0829e515659fb86cc45cd18a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\Votes.sol": {
      "lastModificationDate": 1649847680482,
      "contentHash": "9f16fb85b87d5d903ef88fdcd107d10d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\Votes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1155.sol": {
      "lastModificationDate": 1649846130509,
      "contentHash": "a0b9375c161a0531d4e6de7dbe087d94",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1155MetadataURI.sol": {
      "lastModificationDate": 1649846130509,
      "contentHash": "5ab020f4672275ab9704216ddd21333d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1155MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1155Receiver.sol": {
      "lastModificationDate": 1649846130510,
      "contentHash": "bb492b79008b18d641da8f0919d18db0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1271.sol": {
      "lastModificationDate": 1649846130510,
      "contentHash": "440937d90007c8f7cb7e3fc3198b1a7e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1363.sol": {
      "lastModificationDate": 1649846130510,
      "contentHash": "9b565d02eb5e72024d62bbac431f3076",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1363.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1363Receiver.sol": {
      "lastModificationDate": 1649846130512,
      "contentHash": "8809d186767e9ffe787c05d22ddf7a66",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1363Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1363Spender.sol": {
      "lastModificationDate": 1649846130513,
      "contentHash": "a22d551e87b1583ac53dab91623ba781",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1363Spender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC165.sol": {
      "lastModificationDate": 1649846130513,
      "contentHash": "033024938522142cb8607782662a1d01",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1820Implementer.sol": {
      "lastModificationDate": 1649846130514,
      "contentHash": "08281b7bc8c7ef9fd0aba8d0c870adc0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1820Implementer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1820Registry.sol": {
      "lastModificationDate": 1649846130514,
      "contentHash": "6f9e90193b0fb138a48d34f91a81798f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1820Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC20.sol": {
      "lastModificationDate": 1649846130514,
      "contentHash": "b9ce93875c480e21f71821186ea7736a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC20Metadata.sol": {
      "lastModificationDate": 1649846130515,
      "contentHash": "5a3c08344ee3328d58f9a59747d0af31",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC2981.sol": {
      "lastModificationDate": 1649847680484,
      "contentHash": "d4507476da97499a9aef45aea7d0ef08",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156.sol": {
      "lastModificationDate": 1649846130516,
      "contentHash": "0911b773b55d2af46af2dba340e2f25b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashLender.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol": {
      "lastModificationDate": 1649846130517,
      "contentHash": "d99071e2a21a52badf6dbfb5f9f6ee77",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashLender.sol": {
      "lastModificationDate": 1649846130517,
      "contentHash": "19e91e17e176e0341722eca59688b1b4",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashLender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721.sol": {
      "lastModificationDate": 1649846130517,
      "contentHash": "b64583a9a6c2372282d213b7d561671f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721Enumerable.sol": {
      "lastModificationDate": 1649846130518,
      "contentHash": "cfa21d7c8f7fe63d209d96d415585f5e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721Metadata.sol": {
      "lastModificationDate": 1649846130519,
      "contentHash": "c242c980f0fb4eff81618fd73658d05c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721Receiver.sol": {
      "lastModificationDate": 1649846130519,
      "contentHash": "6b0225d8356565aad2da94235f1a4b6d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC777.sol": {
      "lastModificationDate": 1649846130519,
      "contentHash": "85130ae99329221e40b06d7df2d5c25c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC777Recipient.sol": {
      "lastModificationDate": 1649846130520,
      "contentHash": "38bcc6b3a334ecd1ebd2b5b503bb85a0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC777Recipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC777Sender.sol": {
      "lastModificationDate": 1649846130520,
      "contentHash": "caaf7862ec6569b61dcbaeb3c8514410",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC777Sender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol": {
      "lastModificationDate": 1649847680487,
      "contentHash": "30a09f45daf8d63c075489a48cea7a4a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC2612.sol": {
      "lastModificationDate": 1649846130522,
      "contentHash": "8a7e85a069759dda93cfbbb3b2f34138",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC2612.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\metatx\\ERC2771Context.sol": {
      "lastModificationDate": 1649847680489,
      "contentHash": "f9ff3104460ba082f074a6b7ff1e534e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\metatx\\ERC2771Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.9",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\metatx\\MinimalForwarder.sol": {
      "lastModificationDate": 1649847680490,
      "contentHash": "8a6917a1ccaa78a942c8689a55858401",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\metatx\\MinimalForwarder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AccessControlCrossChainMock.sol": {
      "lastModificationDate": 1649847680492,
      "contentHash": "cd8f10705edaa10ddfccd35a1282a27d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AccessControlCrossChainMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlCrossChain.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL2.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL2.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AccessControlEnumerableMock.sol": {
      "lastModificationDate": 1649846130523,
      "contentHash": "e1abd4345ee8371173a499e39bf6e04d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AccessControlEnumerableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AccessControlMock.sol": {
      "lastModificationDate": 1649846130523,
      "contentHash": "81b19a6a01d3ea999bbfaa64f392b35d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AccessControlMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AddressImpl.sol": {
      "lastModificationDate": 1649846130524,
      "contentHash": "15e1596405f385fb3b958d038ecd5b0b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\AddressImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ArraysImpl.sol": {
      "lastModificationDate": 1649846130524,
      "contentHash": "5080f117210bc9a69bc2e414164019e5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ArraysImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Arrays.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\BadBeacon.sol": {
      "lastModificationDate": 1649846130524,
      "contentHash": "0966a6f49ad55456c9e6960a2560a9a5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\BadBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\Base64Mock.sol": {
      "lastModificationDate": 1649847680492,
      "contentHash": "ad6b2bc1e8c044b6f4b0c18e4d30dfd2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\Base64Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Base64.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\BitmapMock.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "6299f4eb4b2b9f6d69ea819496852665",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\BitmapMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\BitMaps.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CallReceiverMock.sol": {
      "lastModificationDate": 1649847680494,
      "contentHash": "845a1258a9a4441f6c45dd01cc41b389",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CallReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CheckpointsImpl.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "1628365cb21355f22d288234f7caebd7",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CheckpointsImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ClashingImplementation.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "a1f33b6fa3fe52f7f7ed2f0812027d10",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ClashingImplementation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ClonesMock.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "fa5a4aaada0cfd7508b24969c5f609d5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ClonesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Clones.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ConditionalEscrowMock.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "8dfc81f6565074c38cbb10d354535637",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ConditionalEscrowMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\ConditionalEscrow.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ContextMock.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "3e6020434f777d2f69bd6ff3223a0d12",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ContextMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CountersImpl.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "4e0cf77562366df4c6be84503f725106",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CountersImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\Create2Impl.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "5d721a3af7021ade875fd2e6d2bc3861",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\Create2Impl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Create2.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC1820Implementer.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\DoubleEndedQueueMock.sol": {
      "lastModificationDate": 1649847680495,
      "contentHash": "6441b36f9128888b470baaf47ebbb9ed",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\DoubleEndedQueueMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\DummyImplementation.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "106a2e6dce28f86851f627e59c6903b2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\DummyImplementation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ECDSAMock.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "a0d7b2dc07dd7d626a3dc4427b9fb10e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ECDSAMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EIP712External.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "243e1ef8e8f1f2ba6ba31c3844c0c8b5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EIP712External.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155BurnableMock.sol": {
      "lastModificationDate": 1649846130525,
      "contentHash": "bddcdec1b7d0350e15b447611283d3cd",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155BurnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155Mock.sol": {
      "lastModificationDate": 1649846130529,
      "contentHash": "ef4161b80c20e54b9a3088648ffaf859",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155PausableMock.sol": {
      "lastModificationDate": 1649846130529,
      "contentHash": "1b1880fba0e1ac8bd5accb812b85f963",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155Mock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155ReceiverMock.sol": {
      "lastModificationDate": 1649846130529,
      "contentHash": "fff26013940428ee7757150ded639225",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155ReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155SupplyMock.sol": {
      "lastModificationDate": 1649846130530,
      "contentHash": "5177799c476638f8b6b4e4d1f34b0350",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155SupplyMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155Mock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155URIStorageMock.sol": {
      "lastModificationDate": 1649847680495,
      "contentHash": "6b051f5fe134dd9e4b1977d1ef1bfef0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155URIStorageMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1155Mock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155URIStorage.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1271WalletMock.sol": {
      "lastModificationDate": 1649846130530,
      "contentHash": "1a8edcabc4bf2f7b27dcf325bb541f13",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1271WalletMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1271.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165\\ERC165InterfacesSupported.sol": {
      "lastModificationDate": 1649846130530,
      "contentHash": "1af220a2ce876473bb872903281bdfa5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165\\ERC165InterfacesSupported.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165\\ERC165MissingData.sol": {
      "lastModificationDate": 1649846130530,
      "contentHash": "b32c2345488a5d8b22d5430566d94ccf",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165\\ERC165MissingData.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165\\ERC165NotSupported.sol": {
      "lastModificationDate": 1649846130532,
      "contentHash": "7e51695893bf30b15b3d64084bedfefd",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165\\ERC165NotSupported.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165CheckerMock.sol": {
      "lastModificationDate": 1649846130532,
      "contentHash": "ed72b26a2b23771fd49fc5bceb586c4c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165CheckerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165Checker.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165Mock.sol": {
      "lastModificationDate": 1649846130533,
      "contentHash": "091a7df2052d502704274f33adba8443",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165StorageMock.sol": {
      "lastModificationDate": 1649846130533,
      "contentHash": "7e67094bb1a61917ef2ce0ac336f5a79",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC165StorageMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165Storage.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1820ImplementerMock.sol": {
      "lastModificationDate": 1649846130534,
      "contentHash": "8b82f52ba4ac6c5a981a3ef9842eae83",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC1820ImplementerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC1820Implementer.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20BurnableMock.sol": {
      "lastModificationDate": 1649846130535,
      "contentHash": "35be820be7071c25c24a376e242836b9",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20BurnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20CappedMock.sol": {
      "lastModificationDate": 1649846130535,
      "contentHash": "c44531ad2de44953ae41b01290c1b5ad",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20CappedMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Capped.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20DecimalsMock.sol": {
      "lastModificationDate": 1649847680497,
      "contentHash": "0c8dc536b4f18797586d17623e373ab5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20DecimalsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20FlashMintMock.sol": {
      "lastModificationDate": 1649846130536,
      "contentHash": "795e95c31cae4250842c0a9fff192dd0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20FlashMintMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashLender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20FlashMint.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20Mock.sol": {
      "lastModificationDate": 1649846130536,
      "contentHash": "c08bdee235a4df39ae252f056d720303",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20PausableMock.sol": {
      "lastModificationDate": 1649846130536,
      "contentHash": "3deeee49eaf139379a8aac35aaa2f8d2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20PermitMock.sol": {
      "lastModificationDate": 1649846130536,
      "contentHash": "6e946765bce9c4478a97032820c46041",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20PermitMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20SnapshotMock.sol": {
      "lastModificationDate": 1649846130536,
      "contentHash": "10ef20984663031eb4a430bd1d3de9fe",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20SnapshotMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Snapshot.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Arrays.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20VotesCompMock.sol": {
      "lastModificationDate": 1649846130537,
      "contentHash": "0154b2fdc33a10af92fb8f1681176c47",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20VotesCompMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20VotesComp.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20VotesMock.sol": {
      "lastModificationDate": 1649846130539,
      "contentHash": "0990215b66451b6f2e2fc011241e704d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20VotesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20WrapperMock.sol": {
      "lastModificationDate": 1649846130539,
      "contentHash": "2494819fc21c3d2f35a849c8cd672144",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20WrapperMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Wrapper.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC2771ContextMock.sol": {
      "lastModificationDate": 1649846130539,
      "contentHash": "92f139f6b265ce6f81fef7545315841b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC2771ContextMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\metatx\\ERC2771Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ContextMock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.9",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC3156FlashBorrowerMock.sol": {
      "lastModificationDate": 1649846130539,
      "contentHash": "8e0af1ef39fd484d18f4498aa2467863",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC3156FlashBorrowerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashLender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721BurnableMock.sol": {
      "lastModificationDate": 1649846130540,
      "contentHash": "c0344b22a91d379a6700451c4480e88a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721BurnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721EnumerableMock.sol": {
      "lastModificationDate": 1649846130540,
      "contentHash": "e1984688a0ebf9fac7b51fe8e6e0a555",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721EnumerableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721Mock.sol": {
      "lastModificationDate": 1649846130542,
      "contentHash": "3c106532d122cb42888b2541e0673985",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721PausableMock.sol": {
      "lastModificationDate": 1649846130542,
      "contentHash": "8d2c68cc8caccde4eff356be1bfdca4b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721ReceiverMock.sol": {
      "lastModificationDate": 1649846130542,
      "contentHash": "cf84736c368ca419bb737bf0af90e9e9",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721ReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721RoyaltyMock.sol": {
      "lastModificationDate": 1649847680497,
      "contentHash": "289eb9b8d92565997dbd6f7948b7ae55",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721RoyaltyMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC2981.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Royalty.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\common\\ERC2981.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721URIStorageMock.sol": {
      "lastModificationDate": 1649846130543,
      "contentHash": "75697b5052a061e03fd213774bc667cf",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721URIStorageMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721VotesMock.sol": {
      "lastModificationDate": 1649846130543,
      "contentHash": "8d6ec0e4004a64675405bf376909e02f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC721VotesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\draft-ERC721Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC777Mock.sol": {
      "lastModificationDate": 1649846130543,
      "contentHash": "1c6c1fdd384d146b152cb9074e0eade3",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC777Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\ERC777.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC777SenderRecipientMock.sol": {
      "lastModificationDate": 1649846130543,
      "contentHash": "a24eebc3929a5be6172b3cb92330c069",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC777SenderRecipientMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC1820Implementer.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EnumerableMapMock.sol": {
      "lastModificationDate": 1649847680500,
      "contentHash": "c1614de7576863cf19f5ae4cf632c62c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EnumerableMapMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableMap.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EnumerableSetMock.sol": {
      "lastModificationDate": 1649846130544,
      "contentHash": "84169480e8c30accea36c9941d1412d5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EnumerableSetMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EtherReceiverMock.sol": {
      "lastModificationDate": 1649846130544,
      "contentHash": "5e7f4f305af98d647dffc0891e46ce18",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\EtherReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorCompMock.sol": {
      "lastModificationDate": 1649847680501,
      "contentHash": "d75c9a77d5605fea67d20082d57f4b6e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorCompMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesComp.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20VotesComp.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorCompatibilityBravoMock.sol": {
      "lastModificationDate": 1649847680502,
      "contentHash": "e3d16024df841dbfdc1a08962d953e3b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorCompatibilityBravoMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\GovernorCompatibilityBravo.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\IGovernorCompatibilityBravo.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockCompound.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesComp.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20VotesComp.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\compound\\ICompoundTimelock.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorMock.sol": {
      "lastModificationDate": 1649847680504,
      "contentHash": "0937fc75f68e587a6d4ebb9196148d86",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorProposalThreshold.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorPreventLateQuorumMock.sol": {
      "lastModificationDate": 1649847680505,
      "contentHash": "640a405cfa47b65566a47dbe0a780fbb",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorPreventLateQuorumMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorPreventLateQuorum.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorTimelockCompoundMock.sol": {
      "lastModificationDate": 1649847680507,
      "contentHash": "ea71c4f0a56e34a600e0d3e1b4e34318",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorTimelockCompoundMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockCompound.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\compound\\ICompoundTimelock.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorTimelockControlMock.sol": {
      "lastModificationDate": 1649847680508,
      "contentHash": "f75b0505d128508fa68f19584e5ee736",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorTimelockControlMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorSettings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorVoteMock.sol": {
      "lastModificationDate": 1649847680510,
      "contentHash": "cb3fcfbbdf9e39bd5397103bd45a9e67",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorVoteMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorWithParamsMock.sol": {
      "lastModificationDate": 1649847680511,
      "contentHash": "0685c68a41f9c80a6bf234041337ff9b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\GovernorWithParamsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\InitializableMock.sol": {
      "lastModificationDate": 1649847680513,
      "contentHash": "efdbc780705d2c4e23050b3508cf8d5c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\InitializableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\Initializable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MathMock.sol": {
      "lastModificationDate": 1649847680514,
      "contentHash": "fa66819a2fa3327dd21dcf2e31fa21ad",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MerkleProofWrapper.sol": {
      "lastModificationDate": 1649846130551,
      "contentHash": "0d79569f7a0b523fbdf82d93d2703f8f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MerkleProofWrapper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\MerkleProof.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MulticallTest.sol": {
      "lastModificationDate": 1649846130554,
      "contentHash": "fb1afca3f78eebcefb45eb27530e54c9",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MulticallTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20Mock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MulticallTokenMock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Multicall.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MulticallTokenMock.sol": {
      "lastModificationDate": 1649846130554,
      "contentHash": "6f590e7513ab134f62d3efb7df7eca52",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MulticallTokenMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ERC20Mock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Multicall.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MultipleInheritanceInitializableMocks.sol": {
      "lastModificationDate": 1649846130555,
      "contentHash": "873114889a501fd57fa872bfb462ec8f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\MultipleInheritanceInitializableMocks.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\Initializable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\OwnableMock.sol": {
      "lastModificationDate": 1649846130556,
      "contentHash": "5162ff6af61dda071f5ea61cf8a22194",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\OwnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\PausableMock.sol": {
      "lastModificationDate": 1649846130556,
      "contentHash": "e78032624465b349759ef659f89ef071",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\PullPaymentMock.sol": {
      "lastModificationDate": 1649846130556,
      "contentHash": "ab5f53454d4f61920e7de9e9d224278a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\PullPaymentMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\PullPayment.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ReentrancyAttack.sol": {
      "lastModificationDate": 1649846130557,
      "contentHash": "18e9fbf69436eeccafaf5d866672c4d9",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ReentrancyAttack.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ReentrancyMock.sol": {
      "lastModificationDate": 1649846130557,
      "contentHash": "26e7ff7aa40318f6a65be6b5fa2f9ab8",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ReentrancyMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\ReentrancyAttack.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\ReentrancyGuard.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\RegressionImplementation.sol": {
      "lastModificationDate": 1649846130557,
      "contentHash": "f4125612814110953e476fb334b94fa0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\RegressionImplementation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\Initializable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SafeCastMock.sol": {
      "lastModificationDate": 1649846130559,
      "contentHash": "300738e3c16db39adb772e8202918b34",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SafeCastMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SafeERC20Helper.sol": {
      "lastModificationDate": 1649846130559,
      "contentHash": "4604bfb304bd3733ef2d89a2e3f651fe",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SafeERC20Helper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SafeMathMock.sol": {
      "lastModificationDate": 1649846130559,
      "contentHash": "92f9674f1323e1bbf402e6e82ffe1f7b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SafeMathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SignatureCheckerMock.sol": {
      "lastModificationDate": 1649846130561,
      "contentHash": "5b2cbda1a39b87a47035dc0fec51fba8",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SignatureCheckerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1271.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\SignatureChecker.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SignedMathMock.sol": {
      "lastModificationDate": 1649847680515,
      "contentHash": "e774462e41a1d3cc3ed0201fcbed5f91",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SignedMathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SignedSafeMathMock.sol": {
      "lastModificationDate": 1649846130561,
      "contentHash": "b09f68c4e4fdc2066a0aa1ba86f14bf2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SignedSafeMathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SignedSafeMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SingleInheritanceInitializableMocks.sol": {
      "lastModificationDate": 1649846130561,
      "contentHash": "f2689eff7c88231d7e182362ae0f194e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\SingleInheritanceInitializableMocks.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\Initializable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\StorageSlotMock.sol": {
      "lastModificationDate": 1649846130562,
      "contentHash": "d290abbfcbcd5570c5e055632327ef6b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\StorageSlotMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\StringsMock.sol": {
      "lastModificationDate": 1649846130562,
      "contentHash": "b2e031518a2734593d379e6d31ab8f35",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\StringsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\TimersBlockNumberImpl.sol": {
      "lastModificationDate": 1649846130563,
      "contentHash": "fe91cbd1d8e6317356db2a7c25ce8b47",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\TimersBlockNumberImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\TimersTimestampImpl.sol": {
      "lastModificationDate": 1649846130564,
      "contentHash": "a13bfb45f71b30ed8152ca1481bd2f2f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\TimersTimestampImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\UUPS\\UUPSLegacy.sol": {
      "lastModificationDate": 1649847680517,
      "contentHash": "64a8cb10328914e9ce73b14961d4e11d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\UUPS\\UUPSLegacy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CountersImpl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\UUPS\\UUPSUpgradeableMock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\UUPSUpgradeable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\UUPS\\UUPSUpgradeableMock.sol": {
      "lastModificationDate": 1649847680518,
      "contentHash": "83baed7cc366387240530c1e44955b47",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\UUPS\\UUPSUpgradeableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\CountersImpl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\UUPSUpgradeable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\VotesMock.sol": {
      "lastModificationDate": 1649847680520,
      "contentHash": "edb940fb3f6c7bf251f9342c549b6806",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\VotesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\compound\\CompTimelock.sol": {
      "lastModificationDate": 1649846130565,
      "contentHash": "f3e6a5e7ebc7da2c9334a0e5de12f60b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\compound\\CompTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\crosschain\\bridges.sol": {
      "lastModificationDate": 1649847680522,
      "contentHash": "a0f20f1833180afc2e61d04433e1a8ad",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\crosschain\\bridges.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\polygon\\IFxMessageProcessor.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\crosschain\\receivers.sol": {
      "lastModificationDate": 1649847680523,
      "contentHash": "85e08974896d32982b02f2d6f11352d6",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\crosschain\\receivers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\CrossChainEnabled.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\CrossChainEnabledAMB.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\amb\\LibAMB.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL1.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\CrossChainEnabledArbitrumL2.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL1.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\arbitrum\\LibArbitrumL2.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\errors.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\CrossChainEnabledOptimism.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\optimism\\LibOptimism.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\crosschain\\polygon\\CrossChainEnabledPolygonChild.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\ReentrancyGuard.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\amb\\IAMB.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IBridge.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IInbox.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IMessageProvider.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IOutbox.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\optimism\\ICrossDomainMessenger.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\polygon\\IFxMessageProcessor.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\wizard\\MyGovernor1.sol": {
      "lastModificationDate": 1649847680525,
      "contentHash": "3a5e75fc8d6fb6c196e6fcefcb4b2173",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\wizard\\MyGovernor1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\wizard\\MyGovernor2.sol": {
      "lastModificationDate": 1649847680526,
      "contentHash": "46bbc551d562198866d81699f873f58f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\wizard\\MyGovernor2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorCountingSimple.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorProposalThreshold.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\wizard\\MyGovernor3.sol": {
      "lastModificationDate": 1649847680527,
      "contentHash": "c53d4b178384920ec0a6c9dfa77ff197",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\mocks\\wizard\\MyGovernor3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\Governor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\IGovernor.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\TimelockController.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\GovernorCompatibilityBravo.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\compatibility\\IGovernorCompatibilityBravo.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorTimelockControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\GovernorVotesQuorumFraction.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\extensions\\IGovernorTimelock.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Clones.sol": {
      "lastModificationDate": 1649847680530,
      "contentHash": "1fc7ce7ec6277931e9deee94419cbc11",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Clones.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol": {
      "lastModificationDate": 1649846130568,
      "contentHash": "9a4f945f81415762711071c4448dc9cf",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Proxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol": {
      "lastModificationDate": 1649847680533,
      "contentHash": "b960b0d96c52863a22be11e893df2d56",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Proxy.sol": {
      "lastModificationDate": 1649847680534,
      "contentHash": "ebad2b653dfeaa094e71714584f15a56",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\BeaconProxy.sol": {
      "lastModificationDate": 1649846130570,
      "contentHash": "275620f32d228bd20412ecc7081e52db",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\BeaconProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Proxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol": {
      "lastModificationDate": 1649846130572,
      "contentHash": "d81bfe8c27728c6ae880fac6c1fe56a2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\UpgradeableBeacon.sol": {
      "lastModificationDate": 1649846130572,
      "contentHash": "324444364a94b71860a13860d8133b7a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\UpgradeableBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\transparent\\ProxyAdmin.sol": {
      "lastModificationDate": 1649846130573,
      "contentHash": "f860a8bacc66ebd14807e2d34867eee2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\transparent\\ProxyAdmin.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Proxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol": {
      "lastModificationDate": 1649846130574,
      "contentHash": "083bd6d25c0cedc404f6c9b5894ec0d3",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\Proxy.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\Initializable.sol": {
      "lastModificationDate": 1649847680537,
      "contentHash": "654cf58fadfff4b6e0e44bf8030a0fb1",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\UUPSUpgradeable.sol": {
      "lastModificationDate": 1649847680539,
      "contentHash": "848495db96fa98294d432c7a497ef2f5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\utils\\UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\draft-IERC1822.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\proxy\\beacon\\IBeacon.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol": {
      "lastModificationDate": 1649846130577,
      "contentHash": "cf5b5bf252c2f51fa6b100434cb15bb8",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\security\\PullPayment.sol": {
      "lastModificationDate": 1649846130577,
      "contentHash": "124307515ff160ad333cc69f18413bae",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\PullPayment.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\security\\ReentrancyGuard.sol": {
      "lastModificationDate": 1649846130577,
      "contentHash": "06901b00ab54269ede95d08052fb4295",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol": {
      "lastModificationDate": 1649847680541,
      "contentHash": "5f6421ff5362612261ccd6437d18a66b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol": {
      "lastModificationDate": 1649846130579,
      "contentHash": "bf34545843506208162b25f8d6dd95e0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol": {
      "lastModificationDate": 1649847680542,
      "contentHash": "ae5b7c7d752ff3abd479c0c2194e4ee4",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Burnable.sol": {
      "lastModificationDate": 1649846130581,
      "contentHash": "6214633afecdd3192138088b71a91309",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Pausable.sol": {
      "lastModificationDate": 1649846130581,
      "contentHash": "cd79ff3c0cf348c2ec7cd1420a052bcd",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol": {
      "lastModificationDate": 1649847680544,
      "contentHash": "63b4095441d49ff0c58a34f6a6d98d9c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Supply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155URIStorage.sol": {
      "lastModificationDate": 1649847680545,
      "contentHash": "c050840d2f0b3c28051b7f16ad122940",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155URIStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol": {
      "lastModificationDate": 1649846130582,
      "contentHash": "5b9c043533c8acca0db73848e48fa15d",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\presets\\ERC1155PresetMinterPauser.sol": {
      "lastModificationDate": 1649847680547,
      "contentHash": "c2a6f2b7b0d4ea375e9240297ce394e7",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\presets\\ERC1155PresetMinterPauser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\ERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\ERC1155Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\extensions\\IERC1155MetadataURI.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\utils\\ERC1155Holder.sol": {
      "lastModificationDate": 1649847680549,
      "contentHash": "5a06b779f8580267a0d99a6174997b09",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\utils\\ERC1155Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\utils\\ERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\utils\\ERC1155Receiver.sol": {
      "lastModificationDate": 1649846130583,
      "contentHash": "bff98fdbd21b8df5d0a65459c3f0e912",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\utils\\ERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC1155\\IERC1155Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol": {
      "lastModificationDate": 1649847680551,
      "contentHash": "1fbe662e64bcc040ea5bb816ecd3d8b1",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol": {
      "lastModificationDate": 1649847680553,
      "contentHash": "b7f89987582e6eb66e7a8ac7e1502341",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol": {
      "lastModificationDate": 1649847680556,
      "contentHash": "d93133f793f86499d91f6200e8489848",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Capped.sol": {
      "lastModificationDate": 1649846130586,
      "contentHash": "cc962e661964354b0971e775fbe03b86",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Capped.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20FlashMint.sol": {
      "lastModificationDate": 1649847680557,
      "contentHash": "bd8c389e374355bd4833ffb3a7f1942b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20FlashMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashBorrower.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC3156FlashLender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol": {
      "lastModificationDate": 1649846130587,
      "contentHash": "727a2f1012b67aae61b7f19a4a53b8cd",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Snapshot.sol": {
      "lastModificationDate": 1649847680558,
      "contentHash": "84f566d2d819da62c801a76864b08432",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Snapshot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Arrays.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol": {
      "lastModificationDate": 1649847680559,
      "contentHash": "6da0a8eed2962844c5c2b282fc011af7",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20VotesComp.sol": {
      "lastModificationDate": 1649847680560,
      "contentHash": "cced313d2598e7508d1556870bf33a57",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20VotesComp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Wrapper.sol": {
      "lastModificationDate": 1649847680561,
      "contentHash": "7d88783a4b9ba2c9239d542387ece15e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Wrapper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol": {
      "lastModificationDate": 1649846130588,
      "contentHash": "7e3e6992395030ccb281dc67c1a8ae2f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol": {
      "lastModificationDate": 1649847680563,
      "contentHash": "d0fb860ec4351f9f357dbca0f215d223",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-ERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol": {
      "lastModificationDate": 1649846130589,
      "contentHash": "7d796cee942e6b138485934e561338dc",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\presets\\ERC20PresetFixedSupply.sol": {
      "lastModificationDate": 1649847680563,
      "contentHash": "3869050a3abe558a8b49b627071a4dd2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\presets\\ERC20PresetFixedSupply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\presets\\ERC20PresetMinterPauser.sol": {
      "lastModificationDate": 1649847680564,
      "contentHash": "4e9cb3ad178364decad5b3c485a92b91",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\presets\\ERC20PresetMinterPauser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\ERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\ERC20Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol": {
      "lastModificationDate": 1649846130592,
      "contentHash": "43441f54be9683bd6cbe186e1d13b959",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\TokenTimelock.sol": {
      "lastModificationDate": 1649847680565,
      "contentHash": "6075256f0a2a697df4131c657262590a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\TokenTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\utils\\SafeERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol": {
      "lastModificationDate": 1649847680567,
      "contentHash": "124022e96ffb47ea759731a08142e857",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol": {
      "lastModificationDate": 1649847680567,
      "contentHash": "283642a42e7397a28135966cc8f3e0ee",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol": {
      "lastModificationDate": 1649847680567,
      "contentHash": "0535499aec045e717bb28812fd6b4dcc",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Burnable.sol": {
      "lastModificationDate": 1649847680568,
      "contentHash": "92bb06c97bb7b008c1d9066fa672b8f8",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol": {
      "lastModificationDate": 1649846130597,
      "contentHash": "2d4a31fcd60028987e7416547bf819ff",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Pausable.sol": {
      "lastModificationDate": 1649846130597,
      "contentHash": "d292befb107edb8e38eb021db0b78332",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Royalty.sol": {
      "lastModificationDate": 1649847680569,
      "contentHash": "29a321e9c6ad98d02581b3fad886da29",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Royalty.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC2981.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\common\\ERC2981.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol": {
      "lastModificationDate": 1649847680570,
      "contentHash": "fd09fdd347896df190614db1b7539e78",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol": {
      "lastModificationDate": 1649847680570,
      "contentHash": "bb4942e397d9688d164ba177fdb2ef4b",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol": {
      "lastModificationDate": 1649846130599,
      "contentHash": "00a5e045d4844f66434a25a5c7c425e6",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\draft-ERC721Votes.sol": {
      "lastModificationDate": 1649847680571,
      "contentHash": "f6a36e9192ac7159b70c229c8dff05ef",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\draft-ERC721Votes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\IVotes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\governance\\utils\\Votes.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\presets\\ERC721PresetMinterPauserAutoId.sol": {
      "lastModificationDate": 1649847680571,
      "contentHash": "72f75399c27a4e1eb183532bbb3b9114",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\presets\\ERC721PresetMinterPauserAutoId.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\AccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControl.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\IAccessControlEnumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\security\\Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\ERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Burnable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Enumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\ERC721Pausable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\utils\\ERC721Holder.sol": {
      "lastModificationDate": 1649846130600,
      "contentHash": "35ce65b21a20a09b76796fae365baefe",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\utils\\ERC721Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC721\\IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\ERC777.sol": {
      "lastModificationDate": 1649847680573,
      "contentHash": "fb8634c645adfb5b93b9cb1c4424f52a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\ERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol": {
      "lastModificationDate": 1649847680573,
      "contentHash": "c7fa6fb746ee17005fe28029f4a0d279",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol": {
      "lastModificationDate": 1649846130603,
      "contentHash": "0203586bf6a5c0ca2aeabaa3eed387ef",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol": {
      "lastModificationDate": 1649846130603,
      "contentHash": "62698b5654319ecc9efce6828fa9d4a5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\presets\\ERC777PresetFixedSupply.sol": {
      "lastModificationDate": 1649846130604,
      "contentHash": "e90864573c0899a9a75820fdc6b43457",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\presets\\ERC777PresetFixedSupply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC20\\IERC20.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\ERC777.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Recipient.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\ERC777\\IERC777Sender.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\token\\common\\ERC2981.sol": {
      "lastModificationDate": 1649847680574,
      "contentHash": "fcd27d16573212d2cd2bd96ac7fa5193",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\token\\common\\ERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC2981.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol": {
      "lastModificationDate": 1649847680575,
      "contentHash": "a0b498f62e652a7bc3cd0dd93e2f7254",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Arrays.sol": {
      "lastModificationDate": 1649846130605,
      "contentHash": "ff4bd9e42ae29e7352591140ddff7a7c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Arrays.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Base64.sol": {
      "lastModificationDate": 1649847680576,
      "contentHash": "6735ad505590683c89f6ca26c41c2f8c",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Base64.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol": {
      "lastModificationDate": 1649847680577,
      "contentHash": "872ff715b30dfe90987bd75263b8cf32",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Checkpoints.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol": {
      "lastModificationDate": 1649846130605,
      "contentHash": "e7f98c33ad1d39d8a6661bf0804fae36",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol": {
      "lastModificationDate": 1649846130606,
      "contentHash": "047d6dfb038d43ebdcb4dda73e4acaf1",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Counters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Create2.sol": {
      "lastModificationDate": 1649846130607,
      "contentHash": "ed5b3b1c89d98fef77b40dbc1c807b6a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Create2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Multicall.sol": {
      "lastModificationDate": 1649847680577,
      "contentHash": "73729da30ce5c30121e5a3c7daac0401",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Multicall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol": {
      "lastModificationDate": 1649846130608,
      "contentHash": "d8af1860b42c96d26f7d216cec488e72",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol": {
      "lastModificationDate": 1649846130608,
      "contentHash": "88396d54f978442980a1135de6c12ed7",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol": {
      "lastModificationDate": 1649846130608,
      "contentHash": "66d5ca29538e000ee684188a60af2aec",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Timers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol": {
      "lastModificationDate": 1649847680579,
      "contentHash": "856feaa973d4f64f033b37f6fab8dea5",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\MerkleProof.sol": {
      "lastModificationDate": 1649847680580,
      "contentHash": "4bf267d5892bf9fa87b98f50ebe5a06e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\MerkleProof.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\SignatureChecker.sol": {
      "lastModificationDate": 1649847680580,
      "contentHash": "788657a7d13b9496604ca7c2722c180a",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\SignatureChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\interfaces\\IERC1271.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol": {
      "lastModificationDate": 1649846130611,
      "contentHash": "c4d862b1c14a8edafe8dea4876e6da26",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\draft-EIP712.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Strings.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\cryptography\\ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\ConditionalEscrow.sol": {
      "lastModificationDate": 1649846130612,
      "contentHash": "a80da7a13bd4fcec1783c2a5f63fb652",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\ConditionalEscrow.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol": {
      "lastModificationDate": 1649846130612,
      "contentHash": "2a0ab320b17fbb09fb63f73fdd20f8f8",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\RefundEscrow.sol": {
      "lastModificationDate": 1649846130612,
      "contentHash": "d959870de1ac4dc215a03adc734d141f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\RefundEscrow.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\access\\Ownable.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Address.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\Context.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\ConditionalEscrow.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\escrow\\Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol": {
      "lastModificationDate": 1649846130614,
      "contentHash": "46a182d4b952cafd81714841bad4edb0",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165Checker.sol": {
      "lastModificationDate": 1649846130614,
      "contentHash": "282411c142876994f85fbe16d5eaaaa4",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165Checker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165Storage.sol": {
      "lastModificationDate": 1649846130615,
      "contentHash": "7287064b045fe3936b7de19d0150e5b4",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165Storage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC165.sol",
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC1820Implementer.sol": {
      "lastModificationDate": 1649846130615,
      "contentHash": "58dcc1079ff577c8c21e47cab4678815",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\ERC1820Implementer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol": {
      "lastModificationDate": 1649846130615,
      "contentHash": "48674212f545f00ae3efc963b05ffa18",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol": {
      "lastModificationDate": 1649846130615,
      "contentHash": "47b09e8f0d33f8957f2cef82a16d73ce",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Implementer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol": {
      "lastModificationDate": 1649847680581,
      "contentHash": "c74fa37cce0c364c5c925d6d4fe2b17e",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\introspection\\IERC1820Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol": {
      "lastModificationDate": 1649847680581,
      "contentHash": "fd086f44d8bb114b26d67b8cc4fa55b2",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol": {
      "lastModificationDate": 1649846130617,
      "contentHash": "6a84e7ba3e4a3c314b5608877fcee1ae",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeMath.sol": {
      "lastModificationDate": 1649847680582,
      "contentHash": "af734681b6a2d663a29960ec615b91fa",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SignedMath.sol": {
      "lastModificationDate": 1649847680582,
      "contentHash": "981708e6f8bfd11dc9e12811ff55e606",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SignedSafeMath.sol": {
      "lastModificationDate": 1649846130618,
      "contentHash": "e4e9b7f427677f67b75c5373694e9491",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SignedSafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\BitMaps.sol": {
      "lastModificationDate": 1649846130618,
      "contentHash": "a8826aba76f5fa0f2552b58f82493366",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\BitMaps.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol": {
      "lastModificationDate": 1649847680584,
      "contentHash": "c948f360669ac879f0915762771b9c56",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\DoubleEndedQueue.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\math\\SafeCast.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableMap.sol": {
      "lastModificationDate": 1649847680584,
      "contentHash": "f2d3e8ae07c778a3248bcf939d005c93",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableMap.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol": {
      "lastModificationDate": 1649847680585,
      "contentHash": "b0595c608975ae52e9302c14dc0e9598",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\utils\\structs\\EnumerableSet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\amb\\IAMB.sol": {
      "lastModificationDate": 1649847680586,
      "contentHash": "acfc695cf41f7bbe716f879651d6ffad",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\amb\\IAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol": {
      "lastModificationDate": 1649847680587,
      "contentHash": "446738d41a27e8eecce41b11aae47a6f",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IArbSys.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.21, <0.9.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IBridge.sol": {
      "lastModificationDate": 1649847680587,
      "contentHash": "ba4d9fe9b19f3f902aebacd594156bce",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IInbox.sol": {
      "lastModificationDate": 1649847680587,
      "contentHash": "b9b7ee14d4ee9106161073454b6adcbd",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IInbox.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IMessageProvider.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IMessageProvider.sol": {
      "lastModificationDate": 1649847680587,
      "contentHash": "a969c9f821161c5aec4118ef8423a433",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IMessageProvider.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IOutbox.sol": {
      "lastModificationDate": 1649847680589,
      "contentHash": "b1075cb65409dd7c12f50f4a411dab54",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\arbitrum\\IOutbox.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\compound\\ICompoundTimelock.sol": {
      "lastModificationDate": 1649847680589,
      "contentHash": "42eee438fbcb3dd571f35038ed780036",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\compound\\ICompoundTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\optimism\\ICrossDomainMessenger.sol": {
      "lastModificationDate": 1649847680590,
      "contentHash": "196824a7c0bdc82d3486f969f0e373c9",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\optimism\\ICrossDomainMessenger.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">0.5.0, <0.9.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\polygon\\IFxMessageProcessor.sol": {
      "lastModificationDate": 1649847680592,
      "contentHash": "b2b285ac5324b15cec90fde94dffc7e4",
      "sourceName": "contracts\\lib\\openzeppelin-contracts\\contracts\\vendor\\polygon\\IFxMessageProcessor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\ds-test\\demo\\demo.sol": {
      "lastModificationDate": 1649846138263,
      "contentHash": "23a687c34e27f0dd5f1ef90b41077759",
      "sourceName": "contracts\\lib\\solmate\\lib\\ds-test\\demo\\demo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\ds-test\\src\\test.sol"
      ],
      "versionRequirement": ">=0.4.23",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\ds-test\\src\\test.sol": {
      "lastModificationDate": 1649847685798,
      "contentHash": "2c9806925f5d78ba4f4fb0570611cca3",
      "sourceName": "contracts\\lib\\solmate\\lib\\ds-test\\src\\test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\lib\\ds-test\\demo\\demo.sol": {
      "lastModificationDate": 1649846147687,
      "contentHash": "23a687c34e27f0dd5f1ef90b41077759",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\lib\\ds-test\\demo\\demo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\lib\\ds-test\\src\\test.sol"
      ],
      "versionRequirement": ">=0.4.23",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\lib\\ds-test\\src\\test.sol": {
      "lastModificationDate": 1649846147687,
      "contentHash": "8b777625543328d47b9f5e528a8c86fd",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\lib\\ds-test\\src\\test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.23",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Approval.sol": {
      "lastModificationDate": 1649846140057,
      "contentHash": "78c1d791362277b53a760c8c352021b4",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Approval.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ApprovalToZero.sol": {
      "lastModificationDate": 1649846140059,
      "contentHash": "19f1ba6e3188f46057e023a969d93a1e",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ApprovalToZero.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\BlockList.sol": {
      "lastModificationDate": 1649846140060,
      "contentHash": "a467a3bc3b25ee15a63e445bd8369db5",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\BlockList.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Bytes32Metadata.sol": {
      "lastModificationDate": 1649846140061,
      "contentHash": "b6be0fa57da00e39c56cab600d1b02f0",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Bytes32Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol": {
      "lastModificationDate": 1649846140062,
      "contentHash": "61cb56be13887a558c81b21ec86f487c",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\HighDecimals.sol": {
      "lastModificationDate": 1649846140064,
      "contentHash": "df49f7b2287277e768a4b469a7df3ea5",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\HighDecimals.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\LowDecimals.sol": {
      "lastModificationDate": 1649846140064,
      "contentHash": "4bfab74cf78c4679db53181896d783ac",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\LowDecimals.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\MissingReturns.sol": {
      "lastModificationDate": 1649846140066,
      "contentHash": "4e5689f4089b1a67f16027d89442a4f1",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\MissingReturns.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\NoRevert.sol": {
      "lastModificationDate": 1649846140066,
      "contentHash": "d237b06a34bd41fb75308786f28e4165",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\NoRevert.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Pausable.sol": {
      "lastModificationDate": 1649846140067,
      "contentHash": "2460461d881739e5587bc381d36cbc40",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Proxied.sol": {
      "lastModificationDate": 1649846140068,
      "contentHash": "704f10ed7a52c5590674a4871d65b58e",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Proxied.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Reentrant.sol": {
      "lastModificationDate": 1649846140069,
      "contentHash": "39ed7efd74fae4c4032a3f16d6e78dce",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Reentrant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ReturnsFalse.sol": {
      "lastModificationDate": 1649846140070,
      "contentHash": "1359af673f1fb08cb929ede19d229ec9",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ReturnsFalse.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\RevertToZero.sol": {
      "lastModificationDate": 1649846140070,
      "contentHash": "9c32861aeedf743b6fa5bd2b971285fa",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\RevertToZero.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\RevertZero.sol": {
      "lastModificationDate": 1649846140071,
      "contentHash": "e518cd68586dd507a437c31e72322b1e",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\RevertZero.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\TransferFee.sol": {
      "lastModificationDate": 1649846140072,
      "contentHash": "297a2144c31da2282b9279d438846313",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\TransferFee.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\TransferFromSelf.sol": {
      "lastModificationDate": 1649846140073,
      "contentHash": "e4c7eb8226a05ec507dc5d875c5cdaf3",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\TransferFromSelf.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Uint96.sol": {
      "lastModificationDate": 1649846140073,
      "contentHash": "7c3f8063a50238f28a6c9f850a4076df",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Uint96.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Upgradable.sol": {
      "lastModificationDate": 1649846140073,
      "contentHash": "d06b087436dada708bee8d1db173afc2",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Upgradable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\ERC20.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\lib\\weird-erc20\\src\\test.t.sol": {
      "lastModificationDate": 1649846140074,
      "contentHash": "b74832caddfa9f3be7d01523d5905d6e",
      "sourceName": "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\test.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\lib\\weird-erc20\\src\\Proxied.sol"
      ],
      "versionRequirement": ">=0.6.12",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\auth\\Auth.sol": {
      "lastModificationDate": 1649847683222,
      "contentHash": "bb9f3f541c0376dfffbb4faacbe59fdc",
      "sourceName": "contracts\\lib\\solmate\\src\\auth\\Auth.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\auth\\authorities\\MultiRolesAuthority.sol": {
      "lastModificationDate": 1649847683223,
      "contentHash": "f136e4bef36499d634b6c81cb734a09c",
      "sourceName": "contracts\\lib\\solmate\\src\\auth\\authorities\\MultiRolesAuthority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\auth\\authorities\\RolesAuthority.sol": {
      "lastModificationDate": 1649847683224,
      "contentHash": "31f5783018bf1de1733905f03c5436a3",
      "sourceName": "contracts\\lib\\solmate\\src\\auth\\authorities\\RolesAuthority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\mixins\\ERC4626.sol": {
      "lastModificationDate": 1649847683227,
      "contentHash": "7e6514b4769a273f6b51dc6da6424ac8",
      "sourceName": "contracts\\lib\\solmate\\src\\mixins\\ERC4626.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\Auth.t.sol": {
      "lastModificationDate": 1649847683229,
      "contentHash": "d13dbf7b7f533aa1992aa611ac4a59a4",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\Auth.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthChild.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthority.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\Bytes32AddressLib.t.sol": {
      "lastModificationDate": 1649846132269,
      "contentHash": "917510a0845763b7a239e52c320d20fa",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\Bytes32AddressLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\utils\\Bytes32AddressLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\CREATE3.t.sol": {
      "lastModificationDate": 1649847683231,
      "contentHash": "1bfdf3f44fff652afc8f42dc1b31a7eb",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\CREATE3.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthChild.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC20.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\tokens\\WETH.sol",
        "contracts\\lib\\solmate\\src\\utils\\Bytes32AddressLib.sol",
        "contracts\\lib\\solmate\\src\\utils\\CREATE3.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\DSTestPlus.t.sol": {
      "lastModificationDate": 1649847683232,
      "contentHash": "8683155a9f248a620f91b84176705d01",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\DSTestPlus.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\ERC1155.t.sol": {
      "lastModificationDate": 1649847683234,
      "contentHash": "9d5533ad3e391c4808857cbc6e57e321",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\ERC1155.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSInvariantTest.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC1155.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC1155User.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC1155.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\ERC20.t.sol": {
      "lastModificationDate": 1649847683236,
      "contentHash": "7358a2bc65ba30c7b15b0dd4d7dd28bc",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\ERC20.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSInvariantTest.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC20.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC20User.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\ERC4626.t.sol": {
      "lastModificationDate": 1649847683238,
      "contentHash": "c03dcd1884a8271b5cada19a7195951f",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\ERC4626.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\mixins\\ERC4626.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC20.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC4626.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC20User.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC4626User.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\ERC721.t.sol": {
      "lastModificationDate": 1649847683240,
      "contentHash": "1ec3e108a554952fbf27e13a59dbffa3",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\ERC721.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSInvariantTest.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC721.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC721User.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC721.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\FixedPointMathLib.t.sol": {
      "lastModificationDate": 1649847683243,
      "contentHash": "309b207616d0fe25f5c74c28541742be",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\FixedPointMathLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\MultiRolesAuthority.t.sol": {
      "lastModificationDate": 1649847683245,
      "contentHash": "0192c93e165ef6b72899e57edae85476",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\MultiRolesAuthority.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol",
        "contracts\\lib\\solmate\\src\\auth\\authorities\\MultiRolesAuthority.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthority.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\ReentrancyGuard.t.sol": {
      "lastModificationDate": 1649846132271,
      "contentHash": "bbe530fa69635d61d72454909b828629",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\ReentrancyGuard.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\utils\\ReentrancyGuard.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\RolesAuthority.t.sol": {
      "lastModificationDate": 1649847683246,
      "contentHash": "d04d5a302828cf6ad7ea26307b89a9a5",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\RolesAuthority.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol",
        "contracts\\lib\\solmate\\src\\auth\\authorities\\RolesAuthority.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthority.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\SSTORE2.t.sol": {
      "lastModificationDate": 1649847683248,
      "contentHash": "f1304d3be9d468e78863ad9b1c7627fa",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\SSTORE2.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\utils\\SSTORE2.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\SafeCastLib.t.sol": {
      "lastModificationDate": 1649847683249,
      "contentHash": "5b90e35f51ddb3d4a7e15a43d4d617fc",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\SafeCastLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeCastLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\SafeTransferLib.t.sol": {
      "lastModificationDate": 1649847683251,
      "contentHash": "29f2f76725846d91abd2e0f6f9ab2eb0",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\SafeTransferLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC20.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\MissingReturnToken.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsFalseToken.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsGarbageToken.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTooLittleToken.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTooMuchToken.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTwoToken.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\RevertingToken.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\WETH.t.sol": {
      "lastModificationDate": 1649847683252,
      "contentHash": "eba7083e0588e938acbf648879cfd4be",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\WETH.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\DSInvariantTest.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\tokens\\WETH.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\DSInvariantTest.sol": {
      "lastModificationDate": 1649847683255,
      "contentHash": "53bb546f8ebf4a65d46a4532be99b3bb",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\DSInvariantTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol": {
      "lastModificationDate": 1649847683257,
      "contentHash": "ee6441729eb8d5c75a9be29a2c2c56df",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\DSTestPlus.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol": {
      "lastModificationDate": 1649847683259,
      "contentHash": "2f7270e636c4cf852302e46ddd4a7480",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\Hevm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthChild.sol": {
      "lastModificationDate": 1649847683260,
      "contentHash": "5365f4216aa61d85b1f68d95ff089f70",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthChild.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthority.sol": {
      "lastModificationDate": 1649847683261,
      "contentHash": "87f0cffb0896aff293c535bfdcf6cd6f",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockAuthority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\auth\\Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC1155.sol": {
      "lastModificationDate": 1649847683262,
      "contentHash": "b4ae299337dd4c78dfe6b28f0fdf0a28",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC1155.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC20.sol": {
      "lastModificationDate": 1649846132279,
      "contentHash": "a43ff973f6fc1afad3fb92e761b233fc",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC4626.sol": {
      "lastModificationDate": 1649847683262,
      "contentHash": "21e289f5c336cd98c5133a7396055827",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC4626.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\mixins\\ERC4626.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC721.sol": {
      "lastModificationDate": 1649847683264,
      "contentHash": "9f20e24b804c27953be7ea67488753b2",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\mocks\\MockERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC721.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC1155User.sol": {
      "lastModificationDate": 1649847683264,
      "contentHash": "b4de41a009deb7b37989fcfd781690e0",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC1155User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC1155.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC20User.sol": {
      "lastModificationDate": 1649846132281,
      "contentHash": "16bcd81e8cbf381cd22aa04992e1f125",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC20User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC4626User.sol": {
      "lastModificationDate": 1649847683267,
      "contentHash": "4edcbb4b31cc5f47e348781f2aecb492",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC4626User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\mixins\\ERC4626.sol",
        "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC20User.sol",
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC721User.sol": {
      "lastModificationDate": 1649847683268,
      "contentHash": "9763c19d279c20059b1f283379855fb4",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\users\\ERC721User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC721.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\users\\GenericUser.sol": {
      "lastModificationDate": 1649847683273,
      "contentHash": "4867743d42f4e5e0d56c15f2f99a4ec8",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\users\\GenericUser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\MissingReturnToken.sol": {
      "lastModificationDate": 1649847683277,
      "contentHash": "50c03f5936afa6482f86b54b83b8ec49",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\MissingReturnToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsFalseToken.sol": {
      "lastModificationDate": 1649847683279,
      "contentHash": "fdd61fbfd6e549153889b6ca21214b64",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsFalseToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsGarbageToken.sol": {
      "lastModificationDate": 1649847683280,
      "contentHash": "b13e6f1b382ce954328cfe28450488f0",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsGarbageToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTooLittleToken.sol": {
      "lastModificationDate": 1649847683281,
      "contentHash": "1717150c260c42b5b09eaccedecf1f2f",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTooLittleToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTooMuchToken.sol": {
      "lastModificationDate": 1649847683281,
      "contentHash": "f4e74d0862dc1b371c370341fad628be",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTooMuchToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTwoToken.sol": {
      "lastModificationDate": 1649847683283,
      "contentHash": "f7d24660bc84ed4264c27b07345eec2f",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\ReturnsTwoToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\RevertingToken.sol": {
      "lastModificationDate": 1649847683284,
      "contentHash": "7a72bb731cd36176cc52864e83d698c6",
      "sourceName": "contracts\\lib\\solmate\\src\\test\\utils\\weird-tokens\\RevertingToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\tokens\\ERC1155.sol": {
      "lastModificationDate": 1649847683285,
      "contentHash": "90a8b9e8b5d139b9d4afcaff23e91ffc",
      "sourceName": "contracts\\lib\\solmate\\src\\tokens\\ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\tokens\\ERC20.sol": {
      "lastModificationDate": 1649847683287,
      "contentHash": "d2ad526807a28c2037b29b17aa2dbbc1",
      "sourceName": "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\tokens\\ERC721.sol": {
      "lastModificationDate": 1649847683291,
      "contentHash": "8b34fe78f503962a21a83aacbb55a3a5",
      "sourceName": "contracts\\lib\\solmate\\src\\tokens\\ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\tokens\\WETH.sol": {
      "lastModificationDate": 1649847683293,
      "contentHash": "a58a5a847cfbb3411813318f04442ae6",
      "sourceName": "contracts\\lib\\solmate\\src\\tokens\\WETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol",
        "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\Bytes32AddressLib.sol": {
      "lastModificationDate": 1649847683294,
      "contentHash": "41de7337d48e753e5f7f7ce41ca31428",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\Bytes32AddressLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\CREATE3.sol": {
      "lastModificationDate": 1649847683296,
      "contentHash": "fd3962c403d48b23c4b77e9fa4baf349",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\CREATE3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\utils\\Bytes32AddressLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol": {
      "lastModificationDate": 1649847683297,
      "contentHash": "4edb8681c75d51cec371196825e5a254",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\FixedPointMathLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\ReentrancyGuard.sol": {
      "lastModificationDate": 1649847683298,
      "contentHash": "c26f0928258a572fc6289e5c7cc38e66",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\SSTORE2.sol": {
      "lastModificationDate": 1649847683300,
      "contentHash": "e262cb06bd3b1eaf6ce20f41f384272e",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\SSTORE2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\SafeCastLib.sol": {
      "lastModificationDate": 1649847683300,
      "contentHash": "eb4dcfa6d04c757d55c062f567020552",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\SafeCastLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol": {
      "lastModificationDate": 1649847683302,
      "contentHash": "901143ac3d277abe11d6e2b75141bc3b",
      "sourceName": "contracts\\lib\\solmate\\src\\utils\\SafeTransferLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\lib\\solmate\\src\\tokens\\ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\src\\MerkleClaimERC20.sol": {
      "lastModificationDate": 1649846112392,
      "contentHash": "52015e2b4ef1fce43c4b0bc9338df3b2",
      "sourceName": "contracts\\src\\MerkleClaimERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\src\\MerkleClaimERC721.sol": {
      "lastModificationDate": 1649869396298,
      "contentHash": "f5b26e6c3ffbd46c5b32fa7beb1bc7b5",
      "sourceName": "contracts\\src\\MerkleClaimERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\src\\test\\MerkleClaimERC20.t.sol": {
      "lastModificationDate": 1649846112393,
      "contentHash": "178fd533f00c561a648940e315cce80a",
      "sourceName": "contracts\\src\\test\\MerkleClaimERC20.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\src\\MerkleClaimERC20.sol",
        "contracts\\src\\test\\utils\\MerkleClaimERC20Test.sol",
        "contracts\\src\\test\\utils\\MerkleClaimERC20User.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\src\\test\\utils\\MerkleClaimERC20Test.sol": {
      "lastModificationDate": 1649846112394,
      "contentHash": "4138166a0b7173f8aef9fc8739215799",
      "sourceName": "contracts\\src\\test\\utils\\MerkleClaimERC20Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\src\\MerkleClaimERC20.sol",
        "contracts\\src\\test\\utils\\MerkleClaimERC20User.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "C:\\Users\\hp\\Documents\\blockchain\\web3Bridge\\merkle-airdrop-starter\\contracts\\src\\test\\utils\\MerkleClaimERC20User.sol": {
      "lastModificationDate": 1649846112396,
      "contentHash": "098efa51c396e5edfed827751f7160e6",
      "sourceName": "contracts\\src\\test\\utils\\MerkleClaimERC20User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "none"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts\\src\\MerkleClaimERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    }
  }
}